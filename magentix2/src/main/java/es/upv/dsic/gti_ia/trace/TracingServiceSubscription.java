package es.upv.dsic.gti_ia.trace;

import java.io.Serializable;

import es.upv.dsic.gti_ia.core.TracingService;

/**
 * Subscription to a tracing service
 * 
 * @author L Burdalo (lburdalo@dsic.upv.es)
 */
public class TracingServiceSubscription implements Serializable {
	private static final long serialVersionUID = 1L;
	
	/**
	 * Tracing entity which is subscribed to a tracing service
	 */
	private TracingEntity subscriptorEntity;
	
	/**
	 * Flag that indicates if the subscription refers
	 * to trace events generated by a single provider or
	 * if it refers to trace events coming from a specific
	 * provider.
	 */
	private boolean any_provider;
	
	/**
	 * Tracing entity to whose trace events the subscriptor entity
	 * is subscribed. This attribute only has sense when
	 * {@link es.upv.dsic.gti_ia.trace.TracingServiceSubscription#any_provider}
	 * is false. 
	 */
	private TracingEntity originEntity;
	
	/**
	 * Tracing service to which the subscription refers.
	 */
	private TracingService tracingService;
	
	/**
	 * Creates an empty subscription with all attributes set
	 * to null except for {@link es.upv.dsic.gti_ia.trace.TracingServiceSubscription#any_provider}, which is set to false
	 */
	public TracingServiceSubscription () {
		this.subscriptorEntity=null;
		this.any_provider=false;
		this.originEntity=null;
		this.tracingService = null;
	}
	
	/**
	 * Creates a new subscription with its attributes set to the specified
	 * parameters.
	 * 
	 * @param subscriptor	Tracing entity which is subscribed to a tracing service.
	 * @param originEntity	Tracing entity to which trace events the originEntity is subscribed.
	 * 						If set to null, the {@link es.upv.dsic.gti_ia.trace.TracingServiceSubscription#any_provider}
	 * 						is set to true and the subscriptor entity will receive trace events of that service
	 * 						generated by any tracing entity.
	 * @param tracingService	Tracing service to which the subscription refers.
	 */
	public TracingServiceSubscription (TracingEntity subscriptor, TracingEntity originEntity, TracingService tracingService) {
		this.subscriptorEntity=subscriptor;
		if (originEntity == null){
			this.any_provider=true;
		}
		else{
			this.originEntity=originEntity;
			this.any_provider=false;
		}
		this.tracingService = tracingService;
	}
	
	/**
	 * Get the subscribed tracing entity of the subscription.
	 * 
	 * @return returns the subscribed tracing entity of the subscription. 
	 */
	public TracingEntity getSubscriptorEntity(){
		return this.subscriptorEntity;
	}
	
	/**
	 * Determines if the subscription refers to a specific origin entity or not
	 * 
	 * @return Returns the value of the
	 * 		{@link es.upv.dsic.gti_ia.trace.TracingServiceSubscription#any_provider} attribute
	 */
	public boolean getAnyProvider(){
		return this.any_provider;
	}
	
	/**
	 * Get the origin tracing entity of the tracing service to which the subscription refers.
	 * 
	 * @return Returns the tracing entity which provides the tracing service.
	 */
	public TracingEntity getOriginEntity () {
		return this.originEntity;
	}
	
	/**
	 * Get the tracing service to which the subscription refers
	 * 
	 * @return Returns the tracing service to which the subscription refers
	 */
	public TracingService getTracingService () {
		return this.tracingService;
	}
}
